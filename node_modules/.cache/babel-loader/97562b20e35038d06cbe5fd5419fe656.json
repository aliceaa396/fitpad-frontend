{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\ala31\\\\Projects\\\\Capstone\\\\capstone-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ala31\\\\Projects\\\\Capstone\\\\capstone-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\ala31\\\\Projects\\\\Capstone\\\\capstone-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\ala31\\\\Projects\\\\Capstone\\\\capstone-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\ala31\\\\Projects\\\\Capstone\\\\capstone-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Button,Textarea}from'../Utils/Utils';import Context from'../../Contexts/Context';import FitpadApiService from'../../Services/fitpad-api-service';import MusclesDropDown from'../DropDowns/MusclesDropDown';import ExerciseDropDown from'../DropDowns/ExerciseDropDown';import Sets from'./Sets';import'../../Styles/ExerciseForm.css';import muscles from'../DropDowns/muscles.json';var exercises=require('../DropDowns/exercises.json');export var ExerciseForm=/*#__PURE__*/function(_Component){_inherits(ExerciseForm,_Component);function ExerciseForm(){var _getPrototypeOf2;var _this;_classCallCheck(this,ExerciseForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ExerciseForm)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={selectedMuscle:\"\",selectedExercise:\"\"};_this.handleSelectedMuscle=function(event){_this.setState({selectedMuscle:event.target.value});};_this.handleSelectedExercise=function(event){_this.setState({selectedExercise:event.target.value});};_this.handleSubmit=function(e){e.preventDefault();var workout=_this.context.workout;var _e$target=e.target,exercise_name=_e$target.exercise_name,workout_set=_e$target.workout_set,workout_rep=_e$target.workout_rep,workout_weight=_e$target.workout_weight,notes=_e$target.notes;FitpadApiService.postWorkout(exercise_name.value,workout_set.value,workout_rep.value,workout_weight.value,notes.value).then(_this.context.addWorkout).then(function(){exercise_name.value='';workout_set.value='';workout_rep.value='';workout_weight.value='';notes.value='';});_this.props.onAddWorkout();};return _this;}_createClass(ExerciseForm,[{key:\"render\",value:function render(){var exerciseOptions=this.state.selectedMuscle===\"\"?[]:exercises.exercises[this.state.selectedMuscle];return React.createElement(\"div\",{className:\"exercise-form\"},React.createElement(\"h1\",null,\" Add an Exercise \"),React.createElement(\"form\",{className:\"addExercise-form\",onSubmit:this.handleSubmit},React.createElement(\"div\",{className:\"border\"},\" \"),React.createElement(\"div\",{className:\"dropDown\"},React.createElement(MusclesDropDown,{onSelect:this.handleSelectedMuscle,allMuscles:Object.keys(exercises.exercises)}),React.createElement(ExerciseDropDown,{onSelect:this.handleSelectedExercise,allExercises:exerciseOptions})),React.createElement(\"div\",{className:\"setsBox\"},React.createElement(Sets,null)),React.createElement(\"div\",{className:\"textArea\"},React.createElement(Textarea,{placeholder:\"Notes...\",className:\"form-text-normal\",name:\"notes\",id:\"workoutNotes\"})),React.createElement(\"div\",{className:\"logWorkout\"},React.createElement(Button,{className:\"form-btn\",type:\"submit\"},\" Log Exercise \"))));}}]);return ExerciseForm;}(Component);ExerciseForm.defaultProps={onAddWorkout:function onAddWorkout(){}};ExerciseForm.contextType=Context;export default ExerciseForm;","map":{"version":3,"sources":["C:/Users/ala31/Projects/Capstone/capstone-frontend/src/Components/AddWorkout/ExerciseForm.js"],"names":["React","Component","Button","Textarea","Context","FitpadApiService","MusclesDropDown","ExerciseDropDown","Sets","muscles","exercises","require","ExerciseForm","state","selectedMuscle","selectedExercise","handleSelectedMuscle","event","setState","target","value","handleSelectedExercise","handleSubmit","e","preventDefault","workout","context","exercise_name","workout_set","workout_rep","workout_weight","notes","postWorkout","then","addWorkout","props","onAddWorkout","exerciseOptions","Object","keys","defaultProps","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Textarea } from '../Utils/Utils';\r\nimport Context from '../../Contexts/Context';\r\nimport FitpadApiService from '../../Services/fitpad-api-service';\r\nimport MusclesDropDown from '../DropDowns/MusclesDropDown'\r\nimport ExerciseDropDown from '../DropDowns/ExerciseDropDown'\r\nimport Sets from './Sets'\r\nimport '../../Styles/ExerciseForm.css';\r\nimport muscles from '../DropDowns/muscles.json'\r\nconst exercises = require('../DropDowns/exercises.json')\r\n \r\nexport class ExerciseForm extends Component {\r\n  state={\r\n    selectedMuscle: \"\",\r\n    selectedExercise: \"\",\r\n  }\r\n  static defaultProps = {\r\n    onAddWorkout: () =>{}\r\n  };\r\n  static contextType = Context;\r\n\r\n  handleSelectedMuscle = event =>{\r\n    this.setState({selectedMuscle: event.target.value})\r\n  }\r\n\r\n  handleSelectedExercise = event => {\r\n    this.setState({selectedExercise: event.target.value})\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { workout } = this.context\r\n    const {\r\n      exercise_name, \r\n      workout_set, \r\n      workout_rep, \r\n      workout_weight,\r\n      notes,\r\n    } = e.target\r\n    \r\n    FitpadApiService.postWorkout(\r\n      exercise_name.value, \r\n      workout_set.value, \r\n      workout_rep.value, \r\n      workout_weight.value,\r\n      notes.value\r\n    )\r\n    .then(this.context.addWorkout)\r\n    .then(() => {\r\n      exercise_name.value=''; \r\n      workout_set.value=''; \r\n      workout_rep.value='';\r\n      workout_weight.value='' ;\r\n      notes.value='';\r\n    })\r\n    this.props.onAddWorkout();\r\n  }\r\n\r\n\r\n  render() {\r\n    const exerciseOptions = this.state.selectedMuscle === \"\" ? [] : exercises.exercises[this.state.selectedMuscle]\r\n\r\n    return (\r\n      <div className=\"exercise-form\">\r\n        <h1> Add an Exercise </h1>\r\n        <form className=\"addExercise-form\" onSubmit={this.handleSubmit}>\r\n\r\n        <div className=\"border\"> </div>\r\n\r\n            <div className=\"dropDown\">\r\n              <MusclesDropDown \r\n                onSelect={this.handleSelectedMuscle}\r\n                allMuscles={Object.keys(exercises.exercises)}\r\n              />\r\n              <ExerciseDropDown \r\n                onSelect={this.handleSelectedExercise}\r\n                allExercises={exerciseOptions}\r\n              />\r\n            </div>\r\n            <div className=\"setsBox\">\r\n              <Sets/>\r\n            </div>\r\n\r\n            <div className=\"textArea\">\r\n              <Textarea\r\n                placeholder=\"Notes...\"\r\n                className=\"form-text-normal\" \r\n                name=\"notes\" \r\n                id=\"workoutNotes\"\r\n              />\r\n            </div>\r\n            <div className=\"logWorkout\"> \r\n             <Button className=\"form-btn\" type=\"submit\"> Log Exercise </Button>\r\n            </div>              \r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ExerciseForm\r\n"]},"metadata":{},"sourceType":"module"}