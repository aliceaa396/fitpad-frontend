{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ala31\\\\Projects\\\\capstone\\\\capstone-frontend\\\\src\\\\Components\\\\Utils\\\\PublicOnlyRoute.js\";\nimport React from 'react';\nimport TokenService from '../../services/token-service';\nimport { Route, Redirect } from 'react-router-dom';\nexport default function PublicOnlyRoute({\n  component,\n  ...props\n}) {\n  const Component = component;\n  return React.createElement(Route, Object.assign({}, props, {\n    render: componentProps => TokenService.hasAuthToken() ? React.createElement(Redirect, {\n      to: '/home',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }) : React.createElement(Component, Object.assign({}, componentProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/Users/ala31/Projects/capstone/capstone-frontend/src/Components/Utils/PublicOnlyRoute.js"],"names":["React","TokenService","Route","Redirect","PublicOnlyRoute","component","props","Component","componentProps","hasAuthToken"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,eAAe,SAASC,eAAT,CAAyB;AAACC,EAAAA,SAAD;AAAY,KAAGC;AAAf,CAAzB,EAAgD;AAC7D,QAAMC,SAAS,GAAEF,SAAjB;AACA,SACE,oBAAC,KAAD,oBACMC,KADN;AAEE,IAAA,MAAM,EAAEE,cAAc,IACpBP,YAAY,CAACQ,YAAb,KACI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,GAEI,oBAAC,SAAD,oBAAeD,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAUD","sourcesContent":["import React from 'react'\r\nimport TokenService from '../../services/token-service'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport default function PublicOnlyRoute({component, ...props}) {\r\n  const Component= component\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={componentProps => \r\n        TokenService.hasAuthToken()\r\n        ? ( <Redirect to={'/home'} /> )\r\n        : ( <Component {...componentProps} /> )\r\n      } \r\n    />\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}