{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ala31\\\\Projects\\\\capstone\\\\capstone-frontend\\\\src\\\\Components\\\\AddWorkout\\\\ExerciseForm.js\";\nimport React, { Component } from 'react';\nimport { Button, Textarea } from '../Utils/Utils';\nimport Context from '../../Contexts/Context';\nimport FitpadApiService from '../../services/fitpad-api-service';\nimport MusclesDropDown from '../DropDowns/MusclesDropDown';\nimport ExerciseDropDown from '../DropDowns/ExerciseDropDown';\nimport Sets from './Sets';\nimport '../../Styles/ExerciseForm.css';\n\nconst exercises = require('../DropDowns/exercises.json');\n\nexport class ExerciseForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedMuscle: \"\",\n      selectedExercise: \"\",\n      error: null\n    };\n\n    this.handleSelectedMuscle = event => {\n      this.setState({\n        selectedMuscle: event.target.value\n      });\n    };\n\n    this.handleSelectedExercise = event => {\n      this.setState({\n        selectedExercise: event.target.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        workout\n      } = this.context;\n      await this.setState({\n        error: null\n      });\n      const {\n        exercise_name,\n        workout_set,\n        workout_rep,\n        workout_weight,\n        notes\n      } = e.target;\n\n      if (exercise_name.length === 0 || workout_set.length === 0 || workout_rep.length === 0 || workout_weight.length === 0) {\n        this.setState({\n          error: 'You must fill out exercise name, set, rep, and weight in order to submit this workout'\n        });\n      }\n\n      FitpadApiService.postWorkout(exercise_name.value, workout_set.value, workout_rep.value, workout_weight.value, notes.value).then(this.context.addWorkout).then(() => {\n        exercise_name.value = '';\n        workout_set.value = '';\n        workout_rep.value = '';\n        workout_weight.value = '';\n        notes.value = '';\n      }).catch(res => {\n        this.setState({\n          error: res.error\n        });\n      });\n      this.props.onAddWorkout();\n    };\n  }\n\n  renderWorkoutError() {\n    if (this.state.error) {\n      return React.createElement(\"div\", {\n        role: \"alert\",\n        className: \"form-alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \" \", this.state.error, \" \"));\n    }\n  }\n\n  render() {\n    const exerciseOptions = this.state.selectedMuscle === \"\" ? [] : exercises.exercises[this.state.selectedMuscle];\n    return React.createElement(\"div\", {\n      className: \"exercise-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \" Add an Exercise \"), React.createElement(\"form\", {\n      className: \"addExercise-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.renderWorkoutError(), React.createElement(\"div\", {\n      className: \"border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" \"), React.createElement(\"div\", {\n      className: \"dropDown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(MusclesDropDown, {\n      onSelect: this.handleSelectedMuscle,\n      allMuscles: Object.keys(exercises.exercises),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(ExerciseDropDown, {\n      onSelect: this.handleSelectedExercise,\n      allExercises: exerciseOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"setsBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Sets, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"textArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Textarea, {\n      placeholder: \"Notes...\",\n      className: \"form-text-normal\",\n      name: \"notes\",\n      id: \"workoutNotes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"logWorkout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"form-btn\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \" Log Exercise \"))));\n  }\n\n}\nExerciseForm.defaultProps = {\n  onAddWorkout: () => {}\n};\nExerciseForm.contextType = Context;\nexport default ExerciseForm;","map":{"version":3,"sources":["C:/Users/ala31/Projects/capstone/capstone-frontend/src/Components/AddWorkout/ExerciseForm.js"],"names":["React","Component","Button","Textarea","Context","FitpadApiService","MusclesDropDown","ExerciseDropDown","Sets","exercises","require","ExerciseForm","state","selectedMuscle","selectedExercise","error","handleSelectedMuscle","event","setState","target","value","handleSelectedExercise","handleSubmit","e","preventDefault","workout","context","exercise_name","workout_set","workout_rep","workout_weight","notes","length","postWorkout","then","addWorkout","catch","res","props","onAddWorkout","renderWorkoutError","render","exerciseOptions","Object","keys","defaultProps","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Textarea } from '../Utils/Utils';\r\nimport Context from '../../Contexts/Context';\r\nimport FitpadApiService from '../../services/fitpad-api-service';\r\nimport MusclesDropDown from '../DropDowns/MusclesDropDown'\r\nimport ExerciseDropDown from '../DropDowns/ExerciseDropDown'\r\nimport Sets from './Sets'\r\nimport '../../Styles/ExerciseForm.css';\r\nconst exercises = require('../DropDowns/exercises.json')\r\n \r\nexport class ExerciseForm extends Component {\r\n  state={\r\n    selectedMuscle: \"\",\r\n    selectedExercise: \"\",\r\n    error: null\r\n  }\r\n\r\n  static defaultProps = {\r\n    onAddWorkout: () =>{}\r\n  };\r\n  static contextType = Context;\r\n\r\n  handleSelectedMuscle = event =>{\r\n    this.setState({selectedMuscle: event.target.value})\r\n  }\r\n\r\n  handleSelectedExercise = event => {\r\n    this.setState({selectedExercise: event.target.value})\r\n  }\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const { workout } = this.context\r\n\r\n    await this.setState({ error:null });\r\n\r\n    const {\r\n      exercise_name, \r\n      workout_set, \r\n      workout_rep, \r\n      workout_weight,\r\n      notes,\r\n    } = e.target\r\n\r\n    if(exercise_name.length === 0 || workout_set.length === 0 || workout_rep.length === 0 || workout_weight.length === 0) {\r\n      this.setState({\r\n        error: 'You must fill out exercise name, set, rep, and weight in order to submit this workout'\r\n      })\r\n    }\r\n    FitpadApiService.postWorkout(\r\n      exercise_name.value, \r\n      workout_set.value, \r\n      workout_rep.value, \r\n      workout_weight.value,\r\n      notes.value\r\n    )\r\n    .then(this.context.addWorkout)\r\n    .then(() => {\r\n      exercise_name.value=''; \r\n      workout_set.value=''; \r\n      workout_rep.value='';\r\n      workout_weight.value='' ;\r\n      notes.value='';\r\n      \r\n    })\r\n    .catch(res => {\r\n      this.setState({\r\n        error: res.error\r\n      })\r\n    })\r\n    this.props.onAddWorkout();\r\n  }\r\n\r\n  renderWorkoutError() {\r\n    if (this.state.error) {\r\n      return (\r\n        <div role=\"alert\" className=\"form-alert\">\r\n          <p> {this.state.error} </p>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  render() {\r\n    const exerciseOptions = this.state.selectedMuscle === \"\" ? [] : exercises.exercises[this.state.selectedMuscle]\r\n\r\n    return (\r\n      <div className=\"exercise-form\">\r\n        <h1> Add an Exercise </h1>\r\n        <form \r\n          className=\"addExercise-form\" \r\n          onSubmit={this.handleSubmit}\r\n        >\r\n\r\n          {this.renderWorkoutError()}\r\n\r\n        <div className=\"border\"> </div>\r\n            <div className=\"dropDown\">\r\n              <MusclesDropDown \r\n                onSelect={this.handleSelectedMuscle}\r\n                allMuscles={Object.keys(exercises.exercises)}\r\n              />\r\n              <ExerciseDropDown \r\n                onSelect={this.handleSelectedExercise}\r\n                allExercises={exerciseOptions}\r\n              />\r\n            </div>\r\n            <div className=\"setsBox\">\r\n              <Sets/>\r\n            </div>\r\n\r\n            <div className=\"textArea\">\r\n              <Textarea\r\n                placeholder=\"Notes...\"\r\n                className=\"form-text-normal\" \r\n                name=\"notes\" \r\n                id=\"workoutNotes\"\r\n              />\r\n            </div>\r\n            <div className=\"logWorkout\"> \r\n             <Button className=\"form-btn\" type=\"submit\"> Log Exercise </Button>\r\n            </div>              \r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ExerciseForm\r\n"]},"metadata":{},"sourceType":"module"}